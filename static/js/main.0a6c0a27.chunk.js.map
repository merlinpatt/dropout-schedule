{"version":3,"sources":["styles/theme.js","Schedule/ComicsAndChatsList.js","Schedule/Episode.js","Schedule/DayAndEpisode.js","Schedule/DaysAndEpisodesList.js","Schedule/fakeContent.js","Schedule/Schedule.js","Schedule/index.js","App.js","serviceWorker.js","index.js"],"names":["theme","yellow","grayLight","gray","grayMedium","grayDark","black","white","styles","ul","display","padding","listStyle","color","fontStyle","fontWeight","li","ComicsAndChatsList","_ref","_ref$comicsAndChats","comicsAndChats","react_default","a","createElement","style","map","_ref2","index","name","type","key","length","link","borderBottom","concat","textDecoration","imageColumn","width","flexShrink","image","objectFit","height","borderRight","nameColumn","position","showName","margin","fontSize","episodeName","premiere","top","right","backgroundColor","textTransform","Episode","isSeasonPremiere","url","href","Object","assign","dayNames","section","dayColumn","day","lineHeight","textAlign","dayNumber","episodesColumn","DayAndEpisodes","timestamp","episodes","dayName","getDay","getDate","Schedule_Episode","DaysAndEpisodesList","daysAndEpisodes","Fragment","DayAndEpisode","getTime","fakeContent","Date","alt","src","schedule","scheduleHeader","scheduleTitle","logo","footer","comicsAndChatsHeader","marginRight","Schedule","Schedule_DaysAndEpisodesList","Schedule_ComicsAndChatsList","app","column","flexDirection","alignItems","justifyContent","App","src_Schedule","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0a6c0a27.chunk.js","sourcesContent":["export default {\n  colors: {\n    yellow: 'hsl(54, 98%, 61%)',\n    grayLight: 'hsl(0, 0%, 46%)',\n    gray: 'hsl(280, 2%, 62%)',\n    grayMedium: 'hsl(270, 3%, 29%)',\n    grayDark: 'hsl(0, 0%, 13%)',\n    black: 'hsl(0, 0%, 0%)',\n    white: 'hsl(0, 100%, 100%)',\n  },\n};\n","import React from 'react';\nimport theme from 'styles/theme';\n\nconst ComicsAndChatsList = ({comicsAndChats = []}) => {\n  return (\n    <ul style={styles.ul}>\n      {comicsAndChats.map(({name, type}, index) =>\n        <li key={name} style={styles.li}>\n          {name} ({type}){index < comicsAndChats.length - 1 && ', '}\n        </li>\n      )}\n    </ul>\n  );\n};\n\nconst styles = {\n  ul: {\n    display: 'inline',\n    padding: 0,\n    listStyle: 'none',\n    color: theme.colors.grayMedium,\n    fontStyle: 'italic',\n    fontWeight: 'bold',\n  },\n  li: {\n    display: 'inline',\n  },\n};\n\nexport default ComicsAndChatsList;\n","import React from 'react';\nimport theme from 'styles/theme';\n\nconst Episode = ({showName, name, image, isSeasonPremiere, url}) => {\n  return (\n    <a href={url || '#'} style={styles.link}>\n      <div style={styles.imageColumn}>\n        <img {...image} style={styles.image} />\n      </div>\n      <div style={styles.nameColumn}>\n        <h3 style={styles.showName}>\n          {showName}\n        </h3>\n        <h4 style={styles.episodeName}>\n          {name}\n        </h4>\n        {isSeasonPremiere &&\n          <span style={styles.premiere}>\n            Season Premiere\n          </span>\n        }\n      </div>\n    </a>\n  );\n};\n\nconst styles = {\n  link: {\n    display: 'flex',\n    borderBottom: `1px solid ${theme.colors.black}`,\n    textDecoration: 'none',\n  },\n  imageColumn: {\n    width: 60,\n    flexShrink: 0,\n  },\n  image: {\n    display: 'block',\n    objectFit: 'cover',\n    width: '100%',\n    height: '100%',\n    borderRight: `1px solid ${theme.colors.black}`,\n  },\n  nameColumn: {\n    position: 'relative',\n    width: '100%',\n    padding: '2px 7px',\n  },\n  showName: {\n    margin: 0,\n    color: theme.colors.white,\n    fontSize: 11,\n  },\n  episodeName: {\n    margin: 0,\n    color: theme.colors.grayLight,\n    fontSize: 8,\n  },\n  premiere: {\n    position: 'absolute',\n    top: 'calc(50% - 7px)',\n    right: 10,\n    padding: '2px 5px',\n    backgroundColor: theme.colors.black,\n    color: theme.colors.white,\n    fontSize: 8,\n    textTransform: 'uppercase',\n  },\n};\n\nexport default Episode;\n","import React from 'react';\nimport theme from 'styles/theme';\nimport Episode from './Episode';\n\nconst DayAndEpisodes = ({timestamp, episodes}) => {\n  const dayName = dayNames[timestamp.getDay()];\n  const dayNumber = timestamp.getDate();\n  return (\n    <section style={styles.section}>\n      <div style={styles.dayColumn}>\n        <h2 style={styles.day}>\n          {dayName}\n          <strong style={styles.dayNumber}>\n            {dayNumber}\n          </strong>\n        </h2>\n      </div>\n      <div style={styles.episodesColumn}>\n        {episodes.map(({showName, name, image, url, isSeasonPremiere}) =>\n          <Episode\n            key={showName + name}\n            showName={showName}\n            name={name}\n            image={image}\n            isSeasonPremiere={isSeasonPremiere}\n            url={url}\n          />\n        )}\n      </div>\n    </section>\n  );\n};\n\nconst dayNames = [\n  'Sun',\n  'Mon',\n  'Tue',\n  'Wed',\n  'Thu',\n  'Fri',\n  'Sat',\n];\n\nconst styles = {\n  section: {\n    display: 'flex',\n  },\n  dayColumn: {\n    flexShrink: 0,\n    width: 60,\n    borderBottom: `1px solid ${theme.colors.black}`,\n  },\n  day: {\n    margin: 0,\n    fontSize: 10,\n    lineHeight: 1,\n    textAlign: 'center',\n    textTransform: 'uppercase',\n  },\n  dayNumber: {\n    display: 'block',\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  episodesColumn: {\n    width: '100%',\n  },\n};\n\nexport default DayAndEpisodes;\n","import React from 'react';\nimport DayAndEpisode from './DayAndEpisode';\n\nconst DaysAndEpisodesList = ({daysAndEpisodes}) => {\n  return (\n    <React.Fragment>\n      {daysAndEpisodes.map(({timestamp, episodes}) => (\n        <DayAndEpisode key={timestamp.getTime()} timestamp={timestamp} episodes={episodes} />\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default DaysAndEpisodesList;\n","const APRIL = 3;\nconst fakeContent = {\n  daysAndEpisodes: [\n    {\n      timestamp: new Date(2019, APRIL, 14),\n      episodes: [\n        {\n          showName: 'Canon City Comic Book Club',\n          name: 'The Dark Future of the Marvel Universe (Thanos Wins)',\n          image: {\n            alt: '',\n            src: 'http://placekitten.com/300/150',\n          },\n        },\n      ],\n    },\n    {\n      timestamp: new Date(2019, APRIL, 15),\n      episodes: [\n        {\n          showName: 'Troopers',\n          name: 'A Disturbance in HR',\n          url: '',\n          image: {\n            alt: '',\n            src: 'http://placekitten.com/300/151',\n          },\n        },\n        {\n          showName: 'The CH Podcast',\n          name: 'Revealing Too Much',\n          url: '',\n          image: {\n            alt: '',\n            src: 'http://placekitten.com/300/152',\n          },\n        },\n      ],\n    },\n    {\n      timestamp: new Date(2019, APRIL, 16),\n      episodes: [\n        {\n          showName: 'CollegeHumor Original',\n          name: 'Stop Asking Women To Talk About Being Women',\n          url: '',\n          image: {\n            alt: '',\n            src: 'http://placekitten.com/300/153',\n          },\n        },\n        {\n          showName: 'Drawfee',\n          name: 'Artists Draw Silent Hill',\n          url: '',\n          image: {\n            alt: '',\n            src: 'http://placekitten.com/300/154',\n          },\n        },\n        {\n          showName: 'TablePop',\n          name: 'Twilight',\n          url: '',\n          image: {\n            alt: '',\n            src: 'http://placekitten.com/300/155',\n          },\n        },\n      ],\n    },\n    {\n      timestamp: new Date(2019, APRIL, 17),\n      episodes: [\n        {\n          showName: 'Cartoon Hell',\n          name: 'Dungeons & Doggos (Adam Conover)',\n          url: '',\n          image: {\n            alt: '',\n            src: 'http://placekitten.com/300/156',\n          },\n          isSeasonPremiere: true,\n        },\n        {\n          showName: 'Adventuring Academy',\n          name: 'What to Do With a Nat 20 (with B. Dave Walters)',\n          url: '',\n          image: {\n            alt: '',\n            src: 'http://placekitten.com/300/157',\n          },\n        },\n      ],\n    },\n    {\n      timestamp: new Date(2019, APRIL, 18),\n      episodes: [\n        {\n          showName: 'Drawfee',\n          name: 'Artists Make More Characters From Random Shapes',\n          url: '',\n          image: {\n            alt: '',\n            src: 'http://placekitten.com/301/158',\n          },\n        },\n        {\n          showName: 'Today in Nerd History',\n          name: '8 Tiny Changes That Almost Ruined Your Favorite Movies',\n          url: '',\n          image: {\n            alt: '',\n            src: 'http://placekitten.com/300/159',\n          },\n        },\n        {\n          showName: 'Rank Room',\n          name: 'What is the Coolest Way to Quit Your Job?',\n          url: '',\n          image: {\n            alt: '',\n            src: 'http://placekitten.com/300/160',\n          },\n        },\n      ],\n    },\n    {\n      timestamp: new Date(2019, APRIL, 19),\n      episodes: [\n        {\n          showName: 'Hardly Working',\n          name: 'High-Stakes Icebreaker Questions',\n          url: '',\n          image: {\n            alt: '',\n            src: 'http://placekitten.com/300/161',\n          },\n        },\n      ],\n    },\n    {\n      timestamp: new Date(2019, APRIL, 20),\n      episodes: [\n        {\n          showName: 'Paranoia',\n          name: 'Final Exams',\n          url: '',\n          image: {\n            alt: '',\n            src: 'http://placekitten.com/300/162',\n          },\n          isSeasonPremiere: true,\n        },\n        {\n          showName: 'Tales from the Closet',\n          name: 'Episode 9',\n          url: '',\n          image: {\n            alt: '',\n            src: 'http://placekitten.com/300/163',\n          },\n        },\n      ],\n    },\n  ],\n\n  comicsAndChats: [\n    {\n      name: 'The First Mate',\n      type: 'comic',\n    },\n    {\n      name: 'Booby Traps',\n      type: 'chat',\n    },\n    {\n      name: 'Trivia Night',\n      type: 'chat',\n    },\n    {\n      name: 'Lonely and Horny',\n      type: 'chat',\n    },\n    {\n      name: 'Mythical D',\n      type: 'chat',\n    },\n    {\n      name: 'Doommates',\n      type: 'chat',\n    },\n    {\n      name: 'Last of the Burger Bunch',\n      type: 'comic',\n    },\n  ],\n};\n\nexport default fakeContent;\n","import React from 'react';\nimport theme from 'styles/theme';\nimport ComicsAndChatsList from './ComicsAndChatsList';\nimport DaysAndEpisodesList from './DaysAndEpisodesList';\n\nimport fakeContent from './fakeContent';\n\nconst Schedule = () => {\n  return (\n    <div style={styles.schedule}>\n      <header style={styles.scheduleHeader}>\n        <h1 style={styles.scheduleTitle}>\n          This Week On <span style={styles.logo}>Dropout</span>\n        </h1>\n      </header>\n\n      <DaysAndEpisodesList daysAndEpisodes={fakeContent.daysAndEpisodes} />\n\n      <footer style={styles.footer}>\n        <h5 style={styles.comicsAndChatsHeader}>\n          Comics & Chats\n        </h5>\n        <ComicsAndChatsList comicsAndChats={fakeContent.comicsAndChats} />\n      </footer>\n    </div>\n  );\n};\n\nconst styles = {\n  schedule: {\n    width: 375,\n    backgroundColor: theme.colors.grayDark,\n  },\n  scheduleHeader: {\n    padding: 6,\n    backgroundColor: theme.colors.yellow,\n  },\n  scheduleTitle: {\n    margin: 0,\n    color: theme.colors.black,\n    fontSize: 16,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    textTransform: 'uppercase',\n  },\n  logo: {\n    padding: '0px 5px',\n    backgroundColor: theme.colors.black,\n    color: theme.colors.white,\n    fontSize: 19,\n  },\n  footer: {\n    padding: '3px 20px',\n    fontSize: 10,\n  },\n  comicsAndChatsHeader: {\n    display: 'inline',\n    marginRight: 5,\n    color: theme.colors.gray,\n    fontSize: 11,\n    fontWeight: 'bold',\n    textDecoration: 'underline',\n    textTransform: 'uppercase',\n  },\n};\n\nexport default Schedule;\n","import Schedule from './Schedule';\n\nexport default Schedule;\n","import React from 'react';\nimport theme from 'styles/theme';\nimport Schedule from './Schedule';\n\nconst App = () => {\n  return (\n    <div style={styles.app}>\n      <div style={styles.column}>\n        <h1>\n          React Component\n        </h1>\n        <Schedule />\n      </div>\n      <div style={styles.column}>\n        <h1>\n          Existing Image\n        </h1>\n        <img src='/dropout_schedule.jpg' alt='' />\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  app: {\n    display: 'flex',\n    height: '100%',\n    backgroundColor: theme.colors.black,\n    color: theme.colors.white,\n  },\n  column: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}